import { type NextPage } from "next";
import Head from "next/head";
// import { useEffect, useState } from "react";
import Image from "next/image";

import { z } from "zod";

// chess.move("e2", "e4");
// chess.move("b8", "c6");
// chess.move("d1", "h5");

const File = {
  A: "A",
  B: "B",
  C: "C",
  D: "D",
  E: "E",
  F: "F",
  G: "G",
  H: "H",
} as const;

const Rank = {
  1: 1,
  2: 2,
  3: 3,
  4: 4,
  5: 5,
  6: 6,
  7: 7,
  8: 8,
};

type Square = {
  File: typeof File;
  Rank: typeof Rank;
  color: "WHITE" | "BLACK";
  piece: Piece;
};

type Piece = {
  Pawn: "Pawn";
  Knight: "Knight";
  Bishop: "Bishop";
  Rook: "Rook";
  Queen: "Queen";
  King: "King";
};

type StrSquare = {
  File: string;
  Rank: number;
};

type Castling = {
  white_king_side_castling: boolean;
  white_queen_side_castling: boolean;
  black_king_side_castling: boolean;
  black_queen_side_castling: boolean;
};

export type Board = StrSquare[][];

export type PieceColor = {
  WHITE: "WHITE";
  BLACK: "BLACK";
  None: "None";
};

export type Player = {
  color: PieceColor;
  in_check: boolean;
  victory: boolean;
};

type GameState = {
  Checkmate: boolean;
  _InsufficientMaterial: boolean;
  Stalemate: boolean;
  InProgress: boolean;
};

export type Chess = {
  board: Board;
  turn_number: number;
  latest_move: string;
  castling: Castling;
  white_player: Player;
  black_player: Player;
  gamestate: GameState;
  fifty_move_rule: number;
  list_of_moves: string[];
  new_move: { first_sq: string; second_sq: string; piece: string };
};

const blyat = getData();

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>Chess App</title>
        <meta
          name="description"
          content="Chess-app generated by create-t3-app"
        />
        <link rel="icon" href="/pieces/black_king.svg" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gray-900">
        <div className="container flex flex-col items-center justify-center gap-10 px-4 py-16">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            <span className="text-cyan-400">Chess App</span>
          </h1>
          <h1 className="text-red-500">game over</h1>
          <></>

          {/* <Board board={board} /> */}

          {/* {/* <Link
            className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
            href="https://create.t3.gg/en/introduction"
            target="_blank"
          >
            <h3 className="text-2xl font-bold">About me â†’</h3>
            <div className="text-lg">Learn more about me</div>
          </Link> */}
          <a href="https://github.com/Varjovaras/chess-app">
            <Image
              src={"./github-mark.svg"}
              alt="Github link to repository"
              width={40}
              height={40}
            />
          </a>
          <p className="w-full max-w-xs text-center text-xs text-gray-500">
            &copy;2023 Kristjan Rajaniemi
          </p>
        </div>
      </main>
    </>
  );
};

export default Home;

async function getData() {
  const res = await fetch("localhost:8000");
  // The return value is *not* serialized
  // You can return Date, Map, Set, etc.

  if (!res.ok) {
    // This will activate the closest `error.js` Error Boundary
    throw new Error("Failed to fetch data");
  }

  return res.json();
}
